import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;

public class ExercicioBorderLayout {
    private JPanel painel;
    private JTextArea areaDeTexto;
    private JButton botãoSulButton;
    private JRadioButton opçãoRadioButton;
    private JList Lista;
    private JTextArea textInput;

    public ExercicioBorderLayout() {
        botãoSulButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String texto = textInput.getText();
                areaDeTexto.setText(texto);
                JOptionPane.showMessageDialog(null, "Olá: " + texto);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        painel = new JPanel();
        painel.setLayout(new BorderLayout(10, 10));
        Font painelFont = this.$$$getFont$$$("Courier New", Font.PLAIN, 14, painel.getFont());
        if (painelFont != null) painel.setFont(painelFont);
        painel.setMinimumSize(new Dimension(250, 250));
        painel.setBorder(BorderFactory.createTitledBorder(null, "BorderLayout", TitledBorder.CENTER, TitledBorder.TOP, this.$$$getFont$$$("Courier New", Font.PLAIN, 16, painel.getFont()), new Color(-10789536)));
        areaDeTexto = new JTextArea();
        areaDeTexto.setBackground(new Color(-5657422));
        Font areaDeTextoFont = this.$$$getFont$$$("Courier New", Font.PLAIN, 14, areaDeTexto.getFont());
        if (areaDeTextoFont != null) areaDeTexto.setFont(areaDeTextoFont);
        areaDeTexto.setForeground(new Color(-11251629));
        areaDeTexto.setText("Insira o Texto");
        areaDeTexto.setWrapStyleWord(false);
        painel.add(areaDeTexto, BorderLayout.CENTER);
        botãoSulButton = new JButton();
        Font botãoSulButtonFont = this.$$$getFont$$$("Courier New", Font.PLAIN, 12, botãoSulButton.getFont());
        if (botãoSulButtonFont != null) botãoSulButton.setFont(botãoSulButtonFont);
        botãoSulButton.setText("Mensagem");
        painel.add(botãoSulButton, BorderLayout.SOUTH);
        opçãoRadioButton = new JRadioButton();
        Font opçãoRadioButtonFont = this.$$$getFont$$$("Courier New", Font.PLAIN, 16, opçãoRadioButton.getFont());
        if (opçãoRadioButtonFont != null) opçãoRadioButton.setFont(opçãoRadioButtonFont);
        opçãoRadioButton.setText("Opção");
        painel.add(opçãoRadioButton, BorderLayout.WEST);
        Lista = new JList();
        Lista.setEnabled(true);
        Font ListaFont = this.$$$getFont$$$("Courier New", Font.PLAIN, 14, Lista.getFont());
        if (ListaFont != null) Lista.setFont(ListaFont);
        final DefaultListModel defaultListModel1 = new DefaultListModel();
        defaultListModel1.addElement("Lucas");
        defaultListModel1.addElement("Pedro");
        defaultListModel1.addElement("Joao");
        Lista.setModel(defaultListModel1);
        painel.add(Lista, BorderLayout.EAST);
        textInput = new JTextArea();
        painel.add(textInput, BorderLayout.NORTH);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return painel;
    }
}


